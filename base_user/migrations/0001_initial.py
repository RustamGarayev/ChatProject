# Generated by Django 3.2.12 on 2022-02-13 19:31

import base_user.models
import base_user.tools.common
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='last name')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='email address')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=base_user.tools.common.get_user_profile_photo_file_name)),
                ('phone', models.CharField(blank=True, help_text='Nömrənin prefixsiz halını daxil edin, məsələn +994503144847, prefiksiz halı 3144847', max_length=30, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.IntegerField(blank=True, choices=[(1, 'Kişi'), (2, 'Qadın')], default=0, null=True, verbose_name='cinsi')),
                ('client_code', models.CharField(blank=True, db_index=True, editable=False, max_length=30, null=True, unique=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('current_sign_in_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_sign_in_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('sign_in_count', models.IntegerField(default=0)),
                ('is_staff', models.BooleanField(db_index=True, default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='last activity')),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('phone_prefix', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='subscribers', to='core.phoneprefix')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', base_user.models.MyUserManager()),
            ],
        ),
    ]
